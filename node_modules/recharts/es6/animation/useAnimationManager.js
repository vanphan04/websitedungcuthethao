import { useContext, useMemo } from 'react';
import { AnimationManagerContext } from './Animate';
import { createDefaultAnimationManager } from './createDefaultAnimationManager';
export function useAnimationManager(animationManagerFromProps) {
  var contextAnimationManager = useContext(AnimationManagerContext);
  return useMemo(() => {
    var _ref;
    return (_ref = animationManagerFromProps !== null && animationManagerFromProps !== void 0 ? animationManagerFromProps : contextAnimationManager) !== null && _ref !== void 0 ? _ref : createDefaultAnimationManager();
  }, [animationManagerFromProps, contextAnimationManager]);
}